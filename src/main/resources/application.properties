# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

# Configure webapp
server.servlet.context-path=/
server.port=8087
server.servlet.session.timeout=7200

# Include frontend/build folder into static web files
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/frontend/build
# Exclude it from Classpath watching so ReloadableClassLoader will not reload app when files in it changes
spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,frontend/**

# Configure JSON mapper (used by JSON and REST API)
spring.jackson.serialization.indent-output=true
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.mapper.default-view-inclusion=true
spring.jackson.serialization.write-dates-as-timestamps=false

# Configure database
spring.datasource.url=jdbc:postgresql://localhost:5432/test
spring.datasource.username=user
spring.datasource.password=123
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
# https://stackoverflow.com/questions/49110818/method-org-postgresql-jdbc-pgconnection-createclob-is-not-yet-implemented
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.database=postgresql

# Enable DB migrations
spring.flyway.enabled=false
spring.flyway.locations=["classpath:db/migration"]

# Add git information to /management/info
management.info.git.mode=full

# Expose only health and info endpoints
management.endpoints.web.exposure.include=health,info
management.endpoints.web.base-path=/management

# Cache
spring.cache.type=${SPRING_CACHE:none}
redis.host=${REDIS_HOST:localhost}
redis.port=${REDIS_PORT:6379}
redis.cache.expiration=${REDIS_CACHE_TTL:300}

# Root forwarding
forward.login.success = /
forward.logout.finish = /auth/
forward.root = /index.html
base.url = http://localhost:8087/

# Disable spring security
security.insecure = false
security.auth.type = test
security.auth.test.user = test
security.auth.test.password = 123
security.auth.test.roles = USER,ADMIN

# Swagger config
# springfox.documentation.swagger.v2.host =
springfox.documentation.swagger.v2.path = /api/openapi.json

jwt.password = ${JWT_PASSWORD:pleasechangeme123}

# OAuth2 setup
oauth2.google.client-id=${GOOGLE_CLIENT_ID}
oauth2.google.client-secret=${GOOGLE_CLIENT_SECRET}
oauth2.github.client-id=${GITHUB_CLIENT_ID}
oauth2.github.client-secret=${GITHUB_CLIENT_SECRET}
oauth2.clients = github, google
